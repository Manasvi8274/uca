when do conponent re render:-
    state change, parent re-render then child re-render , prop
component:-
    function , reusablee code
why root element :-
    bcs root make full html to react make a root element which is controlled by react
why react:-
    simplified,create a function only html can be done by react,automatically re reender the component
why react instead of angular:-
    if use angular only use angular no other but react can be molded to different language easily


command to use :-
    1)npm create vite
    2)project name and choose react and js
    3)change directory
    4)npm install
    //to run
    5)npm run dev

to change port :- go to line no. 7 in package.json in vite then add --port portnumber

if we use .js or .jsx there is no impact as they bot are same for react but only .jsx has to be converted to .js

NOTE  --- : if we use small starting character it does not work but if we do big case starting then it works
            but if we create a file with small the when importing in anyfile use "as big case alphabet starter
usestates to change the render in react
state = current state ie state at whichc web page is currently working


we use two place to save data :-
    1) use state(to save data) - triggers re-render
    2) useref() - no trigger re-renderuse for mutable objects
---------------------------------------------------------------------------------------------
27_09_2024:::::::::::::::::::::::::::::::::::::::::::::::::
vite to optimese the server rendering:
    1)build part of vite converts the jsx to javascript , css , html etc;
    2)build part of vite also host the build port
    2)doesnt re redner the entire page but the changes to previous dom 
    (after rendering page one time vite creates a virtual dom , in case of re rendering of page it only renders the change(delta) in actual dom to virtual dom then pushes the virtual dom and renders it)
    why virtual dom:-
        1)(dom to dom compile)
        2)(combines the all updates into a batch)

USESTATE() to resave data;

USEEFFECT();(to moniotr re rendering)
    parameter 1 = effect to re render
    parameter 2 = dependency which part depends
    never create open components,var,any data
    only uuse usestate aor useref